<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NAP Central</title>
    <link>/</link>
    <description>Recent content on NAP Central</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 03 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>R and the Tidyverse: next steps</title>
      <link>/blog/2021/04/03/readwbdata/</link>
      <pubDate>Sat, 03 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/2021/04/03/readwbdata/</guid>
      <description>This document is redacted in R Markdown; the source file is available here: https://gitlab.com/stragu/DSH/blob/master/R/tidyverse_next_steps/tidyverse_next_steps.RmdIt is then knitted as a markdown file, which is the best version to view online and to print: https://gitlab.com/stragu/DSH/blob/master/R/tidyverse_next_steps/tidyverse_next_steps.mdPD: see video at https://www.youtube.com/watch?v=2TZYeFcJQIk
Setting upIf you want to review the installation instructions: https://gitlab.com/stragu/DSH/blob/master/R/Installation.md
If you are using your own laptop please open RStudioMake sure you have a working Internet connectionOn the Library’s training computers:Log in with your UQ username and passwordMake sure you have a working Internet connectionOpen the ZENworks applicationLook for “RStudio”Double click on RStudio, which will install both R and RStudioWith RStudio open, let’s make sure we have the necessary packages installed by running this command (this might take a few minutes):</description>
    </item>
    
    <item>
      <title>Linked post</title>
      <link>/blog/2015/10/02/blog1test/</link>
      <pubDate>Fri, 02 Oct 2015 21:49:20 +0200</pubDate>
      
      <guid>/blog/2015/10/02/blog1test/</guid>
      <description>I’m a linked post in the menu. You can add other posts by adding the following line to the frontmatter:
menu = &amp;quot;main&amp;quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit. In mauris nulla, vestibulum vel auctor sed, posuere eu lorem. Aliquam consequat augue ut accumsan mollis. Suspendisse malesuada sodales tincidunt. Vivamus sed erat ac augue bibendum porta sed id ipsum. Ut mollis mauris eget ligula sagittis cursus. Aliquam id pharetra tellus.</description>
    </item>
    
    <item>
      <title>Linked post</title>
      <link>/blog/2015/10/02/linked-post/</link>
      <pubDate>Fri, 02 Oct 2015 21:49:20 +0200</pubDate>
      
      <guid>/blog/2015/10/02/linked-post/</guid>
      <description>I&amp;rsquo;m a linked post in the menu. You can add other posts by adding the following line to the frontmatter:
menu = &amp;quot;main&amp;quot;  Lorem ipsum dolor sit amet, consectetur adipiscing elit. In mauris nulla, vestibulum vel auctor sed, posuere eu lorem. Aliquam consequat augue ut accumsan mollis. Suspendisse malesuada sodales tincidunt. Vivamus sed erat ac augue bibendum porta sed id ipsum. Ut mollis mauris eget ligula sagittis cursus. Aliquam id pharetra tellus.</description>
    </item>
    
    <item>
      <title>Submitted NAPs</title>
      <link>/naps/</link>
      <pubDate>Fri, 02 Oct 2015 21:49:20 +0200</pubDate>
      
      <guid>/naps/</guid>
      <description>library (knitr)
library(readr)submittedNAPs &amp;lt;- read.csv(&amp;quot;napdocsapr2021.csv&amp;quot;)submittedNAPs## country## 1 Brazil## 2 Brazil## 3 Burkina Faso## 4 Burkina Faso## 5 Cameroon## 6 Chile## 7 Colombia## 8 Ethiopia## 9 Fiji## 10 Grenada## 11 Guatemala## 12 Kenya## 13 Kiribati## 14 Kuwait## 15 Paraguay## 16 Saint Lucia## 17 Saint Vincent and the Grenadines## 18 Sri Lanka## 19 State of Palestine## 20 Sudan## 21 Suriname## 22 Timor-Leste## 23 Togo## 24 Uruguay## 25 Uruguay## 26 Uruguay## title## 1 Brazil NAP - English## 2 Brazil NAP - Portuguese## 3 Burkina Faso NAP## 4 Burkina Faso NAP## 5 Cameroon NAP - Fench## 6 Chile NAP - Spanish## 7 Colombia NAP - Spanish## 8 Ethiopia NAP## 9 Fiji NAP## 10 Grenada NAP## 11 Guatemala NAP - Spanish## 12 Kenya NAP## 13 Kiribati NAP## 14 Kuwait National Adaptation Plan 2019-2030## 15 Paraguay NAP## 16 Saint Lucia NAP## 17 Saint Vincent and the Grenadines NAP## 18 Sri Lanka NAP## 19 State of Palestine NAP## 20 Sudan NAP## 21 Suriname NAP## 22 TIMOR-LESTE’S NATIONAL ADAPTATION PLAN: Addressing climate risks and building climate resilience## 23 Togo NAP - French## 24 Uruguay Agriculture NAP Executive Summary - English## 25 Uruguay Agriculture NAP Executive Summary - Spanish## 26 Uruguay Agriculture NAP - Spanish## X date.</description>
    </item>
    
    <item>
      <title>Go is for lovers</title>
      <link>/blog/2015/09/17/go-is-for-lovers/</link>
      <pubDate>Thu, 17 Sep 2015 13:47:08 +0200</pubDate>
      
      <guid>/blog/2015/09/17/go-is-for-lovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Hugo is for lovers</title>
      <link>/blog/2015/08/03/hugo-is-for-lovers/</link>
      <pubDate>Mon, 03 Aug 2015 13:39:46 +0200</pubDate>
      
      <guid>/blog/2015/08/03/hugo-is-for-lovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Creating a new theme</title>
      <link>/blog/2015/06/24/creating-a-new-theme/</link>
      <pubDate>Wed, 24 Jun 2015 13:50:46 +0200</pubDate>
      
      <guid>/blog/2015/06/24/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/contact/</guid>
      <description>We are here to help you Are you curious about something? Do you have some kind of problem with our products? As am hastily invited settled at limited civilly fortune me. Really spring in extent an by. Judge but built gay party world. Of so am he remember although required. Bachelor unpacked be advanced at. Confined in declared marianne is vicinity.
Please feel free to contact us, our customer service center is working for you 24/7.</description>
    </item>
    
    <item>
      <title>FAQ</title>
      <link>/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/faq/</guid>
      <description>Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo.
1. WHAT TO DO IF I HAVE STILL NOT RECEIVED THE ORDER? Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante.</description>
    </item>
    
    <item>
      <title>Global NAP Celendar</title>
      <link>/events/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/events/</guid>
      <description>R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
When you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:</description>
    </item>
    
    <item>
      <title>Migrate from Jekyll</title>
      <link>/blog/1/01/01/migrate-from-jekyll/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/1/01/01/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>NAP Monitor</title>
      <link>/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/monitor/</guid>
      <description>R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
When you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:</description>
    </item>
    
    <item>
      <title>NAP-SDG iFrame</title>
      <link>/iframe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/iframe/</guid>
      <description>R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
When you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:</description>
    </item>
    
    <item>
      <title>Open NAPs</title>
      <link>/open-naps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/open-naps/</guid>
      <description>R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
When you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:</description>
    </item>
    
    <item>
      <title>shinyexample</title>
      <link>/blog/1/01/01/shinyexample/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/1/01/01/shinyexample/</guid>
      <description>library(shiny)library(ggplot2)library(plyr)library(dplyr)
Data Preparation Steps from https://github.com/environmentalstatistics/Shiny-1/blob/master/Script.rdata &amp;lt;- read.csv(“https://raw.githubusercontent.com/environmentalstatistics/Shiny-1/master/Dec-2017.csv”)
data\(Date &amp;lt;- strptime(as.character(data\)Date.yyyy.MM.dd.),format=“%m/%d/%Y”)data\(Date &amp;lt;- as.POSIXct(data\)Date)
data\(DateTime &amp;lt;- strptime(as.character(data\)DateTime),format=“%m/%d/%Y %H:%M”)data\(DateTime &amp;lt;- as.POSIXct(data\)DateTime)
data\(Day &amp;lt;- as.numeric(as.character(strftime(data\)DateTime,format=“%d”)))data\(Hour &amp;lt;- as.numeric(as.character(strftime(data\)DateTime,format=“%H”)))
data &amp;lt;- data %&amp;gt;% filter(BC6!=0)
ui &amp;lt;- fluidPage(
# App title —-titlePanel(“Shiny - First Interactive Visualization Example”),
# Sidebar layout with input and output definitions —-sidebarLayout(# Sidebar panel for inputs —-sidebarPanel(
 # Input: Slider for the number of bins ----selectInput(inputId=&amp;quot;color1&amp;quot;,label=&amp;quot;Choose Color&amp;quot;,choices = c(&amp;quot;Red&amp;quot;=&amp;quot;Red&amp;quot;,&amp;quot;Blue&amp;quot;=&amp;quot;Blue&amp;quot;,&amp;quot;Green&amp;quot;=&amp;quot;Green&amp;quot;),selected = &amp;quot;Blue&amp;quot;,multiple = F),radioButtons(inputId = &amp;quot;border1&amp;quot;,label = &amp;quot;Select Border&amp;quot;,choices = c(&amp;quot;Black&amp;quot;=&amp;quot;#000000&amp;quot;,&amp;quot;White&amp;quot;=&amp;quot;#ffffff&amp;quot;)),selectInput(inputId=&amp;quot;channel1&amp;quot;,label=&amp;quot;Choose Channel&amp;quot;,choices = c(&amp;quot;BC1&amp;quot;=&amp;quot;BC1&amp;quot;,&amp;quot;BC2&amp;quot;=&amp;quot;BC2&amp;quot;,&amp;quot;BC3&amp;quot;=&amp;quot;BC3&amp;quot;,&amp;quot;BC4&amp;quot;=&amp;quot;BC4&amp;quot;,&amp;quot;BC5&amp;quot;=&amp;quot;BC5&amp;quot;,&amp;quot;BC6&amp;quot;=&amp;quot;BC6&amp;quot;,&amp;quot;BC7&amp;quot;=&amp;quot;BC7&amp;quot;),selected = &amp;quot;BC6&amp;quot;,multiple = F),sliderInput(inputId = &amp;quot;bins1xz&amp;quot;,label = &amp;quot;Number of bins:&amp;quot;,min = 1,max = 50,value = 30),sliderInput(inputId = &amp;quot;range1&amp;quot;,label = &amp;quot;Data Range&amp;quot;,min = 1,max = 31,value = c(1,31))),# Main panel for displaying outputs ----mainPanel(# Output: Histogram ----plotOutput(outputId = &amp;quot;distPlot&amp;quot;),plotOutput(outputId = &amp;quot;distPlot1&amp;quot;),plotOutput(outputId = &amp;quot;distPlot2&amp;quot;))))</description>
    </item>
    
  </channel>
</rss>
